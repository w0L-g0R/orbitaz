# Generated by Django 3.1.6 on 2021-02-10 07:27

import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EntsoData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('frame', models.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntsoSpecs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(choices=[('AL', '10YAL-KESH-----5'), ('AT', '10YAT-APG------L'), ('BA', '10YBA-JPCC-----D'), ('BE', '10YBE----------2'), ('BG', '10YCA-BULGARIA-R'), ('BY', '10Y1001A1001A51S'), ('CH', '10YCH-SWISSGRIDZ'), ('CZ', '10YCZ-CEPS-----N'), ('DE', '10Y1001A1001A83F'), ('DK', '10Y1001A1001A65H'), ('EE', '10Y1001A1001A39I'), ('ES', '10YES-REE------0'), ('FI', '10YFI-1--------U'), ('FR', '10YFR-RTE------C'), ('GB', '10YGB----------A'), ('GB-NIR', '10Y1001A1001A016'), ('GR', '10YGR-HTSO-----Y'), ('HR', '10YHR-HEP------M'), ('HU', '10YHU-MAVIR----U'), ('IE', '10YIE-1001A00010'), ('IT', '10YIT-GRTN-----B'), ('LT', '10YLT-1001A0008Q'), ('LU', '10YLU-CEGEDEL-NQ'), ('LV', '10YLV-1001A00074'), ('ME', '10YCS-CG-TSO---S'), ('MK', '10YMK-MEPSO----8'), ('MT', '10Y1001A1001A93C'), ('NL', '10YNL----------L'), ('NO', '10YNO-0--------C'), ('PL', '10YPL-AREA-----S'), ('PT', '10YPT-REN------W'), ('RO', '10YRO-TEL------P'), ('RS', '10YCS-SERBIATSOV'), ('RU', '10Y1001A1001A49F'), ('RU-KGD', '10Y1001A1001A50U'), ('SE', '10YSE-1--------K'), ('SI', '10YSI-ELES-----O'), ('SK', '10YSK-SEPS-----K'), ('TR', '10YTR-TEIAS----W'), ('UA', '10YUA-WEPS-----0'), ('DE-AT-LU', '10Y1001A1001A63L')], max_length=10)),
                ('bidding_zone', models.CharField(choices=[('AL', '10YAL-KESH-----5'), ('AT', '10YAT-APG------L'), ('BA', '10YBA-JPCC-----D'), ('BE', '10YBE----------2'), ('BG', '10YCA-BULGARIA-R'), ('BY', '10Y1001A1001A51S'), ('CH', '10YCH-SWISSGRIDZ'), ('CZ', '10YCZ-CEPS-----N'), ('DE', '10Y1001A1001A63L'), ('DK', '10Y1001A1001A65H'), ('EE', '10Y1001A1001A39I'), ('ES', '10YES-REE------0'), ('FI', '10YFI-1--------U'), ('FR', '10YFR-RTE------C'), ('GB', '10YGB----------A'), ('GB-NIR', '10Y1001A1001A016'), ('GR', '10YGR-HTSO-----Y'), ('HR', '10YHR-HEP------M'), ('HU', '10YHU-MAVIR----U'), ('IE', '10YIE-1001A00010'), ('IT', '10YIT-GRTN-----B'), ('LT', '10YLT-1001A0008Q'), ('LU', '10Y1001A1001A63L'), ('LV', '10YLV-1001A00074'), ('ME', '10YCS-CG-TSO---S'), ('MK', '10YMK-MEPSO----8'), ('MT', '10Y1001A1001A93C'), ('NL', '10YNL----------L'), ('NO', '10YNO-0--------C'), ('PL', '10YPL-AREA-----S'), ('PT', '10YPT-REN------W'), ('RO', '10YRO-TEL------P'), ('RS', '10YCS-SERBIATSOV'), ('RU', '10Y1001A1001A49F'), ('RU-KGD', '10Y1001A1001A50U'), ('SE', '10YSE-1--------K'), ('SI', '10YSI-ELES-----O'), ('SK', '10YSK-SEPS-----K'), ('TR', '10YTR-TEIAS----W'), ('UA', '10YUA-WEPS-----0'), ('DE-AT-LU', '10Y1001A1001A63L'), ('IT-NORD', '10Y1001A1001A73I'), ('IT-CNOR', '10Y1001A1001A70O'), ('IT-CSUD', '10Y1001A1001A71M'), ('IT-SUD', '10Y1001A1001A788'), ('IT-FOGN', '10Y1001A1001A72K'), ('IT-ROSN', '10Y1001A1001A77A'), ('IT-BRNN', '10Y1001A1001A699'), ('IT-PRGP', '10Y1001A1001A76C'), ('IT-SARD', '10Y1001A1001A74G'), ('IT-SICI', '10Y1001A1001A75E'), ('NO-1', '10YNO-1--------2'), ('NO-2', '10YNO-2--------T'), ('NO-3', '10YNO-3--------J'), ('NO-4', '10YNO-4--------9'), ('NO-5', '10Y1001A1001A48H'), ('SE-1', '10Y1001A1001A44P'), ('SE-2', '10Y1001A1001A45N'), ('SE-3', '10Y1001A1001A46L'), ('SE-4', '10Y1001A1001A47J'), ('DK-1', '10YDK-1--------W'), ('DK-2', '10YDK-2--------M')], max_length=10)),
                ('power_source', models.CharField(choices=[('A29', 'Already allocated capacity (AAC)'), ('A43', 'Requested capacity (without price)'), ('A46', 'System Operator redispatching'), ('A53', 'Planned maintenance'), ('A54', 'Unplanned outage'), ('A85', 'Internal redispatch'), ('A95', 'Frequency containment reserve'), ('A96', 'Automatic frequency restoration reserve'), ('A97', 'Manual frequency restoration reserve'), ('A98', 'Replacement reserve'), ('B01', 'Interconnector network evolution'), ('B02', 'Interconnector network dismantling'), ('B03', 'Counter trade'), ('B04', 'Congestion costs'), ('B05', 'Capacity allocated (including price)'), ('B07', 'Auction revenue'), ('B08', 'Total nominated capacity'), ('B09', 'Net position'), ('B10', 'Congestion income'), ('B11', 'Production unit')], max_length=10)),
                ('allocation_type', models.CharField(choices=[('A03', 'Mixed'), ('A04', 'Generation'), ('A05', 'Load'), ('B01', 'Biomass'), ('B02', 'Fossil Brown coal/Lignite'), ('B03', 'Fossil Coal-derived gas'), ('B04', 'Fossil Gas'), ('B05', 'Fossil Hard coal'), ('B06', 'Fossil Oil'), ('B07', 'Fossil Oil shale'), ('B08', 'Fossil Peat'), ('B09', 'Geothermal'), ('B10', 'Hydro Pumped Storage'), ('B11', 'Hydro Run-of-river and poundage'), ('B12', 'Hydro Water Reservoir'), ('B13', 'Marine'), ('B14', 'Nuclear'), ('B15', 'Other renewable'), ('B16', 'Solar'), ('B17', 'Waste'), ('B18', 'Wind Offshore'), ('B19', 'Wind Onshore'), ('B20', 'Other'), ('B21', 'AC Link'), ('B22', 'DC Link'), ('B23', 'Substation'), ('B24', 'Transformer')], max_length=10)),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('resolution', models.DurationField()),
                ('unit', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Forecast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('series', models.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('accuracy', models.FloatField()),
                ('method', models.CharField(max_length=25)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JaoData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('frame', models.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JaoSpecs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=10)),
                ('bidding_zone', models.CharField(max_length=10)),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('resolution', models.DurationField()),
                ('unit', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Luna',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('captain', models.CharField(max_length=50)),
                ('contact', models.EmailField(max_length=254)),
                ('status', models.CharField(choices=[('active', 'Active'), ('lost_in_space', 'Inactive')], max_length=15)),
                ('max_workers', models.IntegerField()),
                ('score', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MissionControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scores', models.JSONField(encoder=django.core.serializers.json.DjangoJSONEncoder)),
                ('luna', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.luna')),
            ],
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entso_data', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.entsodata')),
                ('forecast', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.forecast')),
                ('jao_data', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.jaodata')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='commodityproduct',
            name='point_of_origin',
        ),
        migrations.RemoveField(
            model_name='commodityproduct',
            name='unit',
        ),
        migrations.DeleteModel(
            name='Customer',
        ),
        migrations.RemoveField(
            model_name='index',
            name='point_of_origin',
        ),
        migrations.RemoveField(
            model_name='index',
            name='unit',
        ),
        migrations.RemoveField(
            model_name='indexvalue',
            name='index',
        ),
        migrations.RemoveField(
            model_name='price',
            name='commodity_product',
        ),
        migrations.DeleteModel(
            name='CommodityProduct',
        ),
        migrations.DeleteModel(
            name='Index',
        ),
        migrations.DeleteModel(
            name='IndexValue',
        ),
        migrations.DeleteModel(
            name='PointOfOrigin',
        ),
        migrations.DeleteModel(
            name='Price',
        ),
        migrations.DeleteModel(
            name='Unit',
        ),
        migrations.AddField(
            model_name='luna',
            name='worker',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.worker'),
        ),
        migrations.AddField(
            model_name='jaodata',
            name='specification',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.jaospecs'),
        ),
        migrations.AddField(
            model_name='entsodata',
            name='specification',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.entsospecs'),
        ),
    ]
